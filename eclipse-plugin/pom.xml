
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
>
    
    <parent>
        <groupId>org.s4i</groupId>
        <artifactId>maven-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>eclipse-plugin</artifactId>

    <packaging>${packaging.type}</packaging>
    <description>A sample mavenized Eclipse RCP bundle</description>

    <properties>
        <!--
            A profile can't switch the packaging directly,
            so set the packaging to the value of this property
            and have the profile change the property value.
        -->
        <packaging.type>bundle</packaging.type>
    </properties>

    <build>
        <resources>
            <!--
                Add the resources that are outside of Maven's conventional resource directory.
                These resources are in the root because eclipse requires them there.
            -->
            <resource>
                <directory>${basedir}</directory>
                <includes>
                    <include>plugin.xml</include>
                    <include>icons/**/*.*</include>
                </includes>
            </resource>
            
            <!--
                Also include default resources directory
            -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        
        <plugins>
            <!--
                Overrides parent configuration to generate an eclipse PDE project
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <!--
                        Add missing eclipse classpath entries (missing for both PDE and non-PDE)
                    -->
                    <classpathContainers>
                        <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
                        <classpathContainer>org.eclipse.pde.core.requiredPlugins</classpathContainer>
                    </classpathContainers>
                </configuration>
            </plugin>

            <!--
                OSGI bundle configuration
            -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>

                        <Bundle-Activator>org.s4i.Activator</Bundle-Activator>
                        
                        <!--
                            Eclipse dependencies must be declared as Require-Bundle
                            instead of (or in addition to) Import-Package. Otherwise,
                            the generated eclipse project will not property link
                            to the eclipse dependencies in the workspace.
                        -->
						<Require-Bundle>
							org.eclipse.ui,
							org.eclipse.core.runtime,
							org.eclipse.core.databinding;bundle-version="1.4.0",
							org.eclipse.core.databinding.beans;bundle-version="1.2.100",
							org.eclipse.jface.databinding;bundle-version="1.5.0",
							org.eclipse.core.databinding.property;bundle-version="1.4.0",
							org.eclipse.ui.forms;bundle-version="3.5.101"
						</Require-Bundle>

                        <!--
                            Exclude eclipse imports since they are specified in Require-Bundle.
                        -->
                        <Import-Package>
                            !org.eclipse.*,
                            *
                        </Import-Package>

                        <!--
                            Use "-removeheaders" BND argument to remove unwanted headers.

                            Must be all on one line.
                        -->
                        <_removeheaders>Ignore-Package,Include-Resource,Private-Package</_removeheaders>

                        <!--
                            Apply "-failok" BND argument.

                            Don't care if BND can't find some packages
                        -->
                        <_failok>true</_failok>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        
        <!--
            Project dependencies
        -->
        
        <dependency>
            <groupId>org.s4i</groupId>
            <artifactId>eclipse-plugin-utils</artifactId>
        </dependency>
        
        <!--
            API dependencies
        -->
        
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
            
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        
        <!--
            Test dependencies
        -->
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <profiles>

        <!--
            Maven profile
        -->
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <!--
            Tycho profile
        -->
        <profile>
            <id>tycho</id>
            <properties>
                <packaging.type>eclipse-plugin</packaging.type>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.tycho</groupId>
                        <artifactId>tycho-maven-plugin</artifactId>
                        <version>${tycho.version}</version>
                        <extensions>true</extensions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
